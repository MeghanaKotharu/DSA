Delete a node in a singly-linked list. You will not be given access to the head of the list,
             instead you will be given access to the node to be deleted directly.
It is guaranteed that the node to be deleted is not a tail node in the list.

ex:  4->5->1->9   node=5    o/p: 4->1->9

Approach:
1.Replace the curr node value with next node value.
2.Delete next node by simply changing the address of curr node to curr.next.next


Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public void deleteNode(ListNode node) {
        ListNode temp=node.next;
        node.val=temp.val;
        node.next=temp.next;
        
        /*
        Another way
        node.val=node.next.val;
        node.next=node.next.next;
        
        */
    }
}
