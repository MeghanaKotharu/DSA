Given the head of a linked list and an integer val, remove all the nodes of the linked list 
           that has Node.val == val, and return the new head.
           
ex1:     1->2->6->3->4->5->6         val=6
o/p:    1->2->3->4->5

ex2:    7->7->7->7->      val=7
o/p:    ""


Approach:
1.if all the elements in head are same remove all of them starting from head.
2.if next element is val then change the curr value reference to next value reference.
                2->6->3
         curr=2  , next=6 ,next next=3
    -->next is 6 ie value so we need to remove it for that we simply change the address 
       of curr from next to next next
       
Note: I used a while loop at 38 line bez if 2->6->6->4 comes then 
       we need remove the value of next next as well  the below way will happen
       2->6->6->4     curr=2  next=6  next next=6
       2->6->4        curr=2  next=6  next next=4
       2->4           curr=2  next=6


Solution: 

class Solution {
    public ListNode removeElements(ListNode head, int val) {
        ListNode temp=head,prev=head;
        
        if(head==null) return head;
        
        while(head!=null && head.val==val)
            head=head.next;
        
        while(temp!=null){
            while(temp.next!=null && temp.next.val==val)
                temp.next=temp.next.next;
            temp=temp.next;
        }
        return head;
    }
}
