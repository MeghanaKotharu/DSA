https://practice.geeksforgeeks.org/problems/first-negative-integer-in-every-window-of-size-k3345/1#

Given an array A[] of size N and a positive integer K, find the first negative integer for each 
and every window(contiguous subarray) of size K.

Example 1:

A[] = {-8, 2, 3, -6, 10}   K = 2
Output : 
-8 0 -6 -6

Approach:  tc:O(n)  sc:O(n)
1.Just read the fixed size sw approach in readme you'll understand this
Solution:
class Compute {
    
    public long[] printFirstNegativeInteger(long A[], int N, int K)
    {
        int i=0,j=0,k=0;
        long [] a=new long[N-K+1];
        ArrayList<Long> ar=new ArrayList<>();
        while(j<N){
            if((j-i+1) < K){     //goes through this condition until we reach the window size
                if(A[j]<0)
                   ar.add(A[j]);
                j++;
            }
            else{
                if( A[j]<0 ) ar.add(A[j]);  //adding new element into end of sw                
                j++;
                a[k++] = (ar.isEmpty()) ? (0) : (ar.get(0));     //adding ans to result  --first ele in arraylist
                if(A[i]<0 && (!ar.isEmpty())) ar.remove(0);     // removing first element in sw
                i++;
            }
        }
        return a;
    }
}
