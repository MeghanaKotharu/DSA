https://practice.geeksforgeeks.org/problems/equivalent-sub-arrays3731/1/?page=1&status[]=unsolved&category[]=sliding-window&sortBy=submissions#

Given an array arr[] of n integers. Count the total number of sub-array having total distinct elements same as that of total distinct elements of the original array.

 

Example 1:

Input:
N=5
arr[] = {2, 1, 3, 2, 3} 
Output: 5

Explanation:
Total distinct elements in array is 3 
Total sub-arrays that satisfy the condition are:
Subarray from index 0 to 2
Subarray from index 0 to 3
Subarray from index 0 to 4
Subarray from index 1 to 3
Subarray from index 1 to 4

Example 2:

Input:
N=5
arr[] = {2, 4, 4, 2, 4} 
Output: 9

Solution: tc:O(n)   sc:O(n)
class Solution{ 
    static int countDistinctSubarray(int arr[], int n) { 
       HashMap<Integer,Integer> map = new HashMap<>();
       HashMap<Integer,Integer> map1 = new HashMap<>();
       
       for(int p=0;p<arr.length;p++){
           map1.put(arr[p],map1.getOrDefault(arr[p],0)+1);
       }
       
       int m = map1.size(), j = 0, count = 0, len = arr.length-1; 
       
       for(int i=0;i<arr.length;i++){
           int key = arr[i];
           map.put(key,map.getOrDefault(key,0)+1);
           
           while(map.size() == m){
               count += (len-i)+1;
               int key2 = map.get(arr[j]);
               
               if(key2 == 1)
                   map.remove(arr[j]);
               else
                   map.put(arr[j],map.get(arr[j])-1);
               j++;
           }
       }
       return count;
   }
}
