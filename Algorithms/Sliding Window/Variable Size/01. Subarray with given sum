https://practice.geeksforgeeks.org/problems/subarray-with-given-sum-1587115621/1/?page=1&category%5b%5d=sliding-window&sortBy=submissions#

Given an unsorted array A of size N that contains only non-negative integers, find a continuous sub-array which adds to a given number S.
In case of multiple subarrays, return the subarray which comes first on moving from left to right.

Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
Output: 2 4
Explanation: The sum of elements from 2nd position to 4th position is 12.


Solution: tc:O(n) sc:O(2)
class Solution
{
    static ArrayList<Integer> subarraySum(int[] arr, int n, int s) 
    {
        // Your code here
        ArrayList<Integer> a=new ArrayList<>();
        int i=0,j=0,sum=0;
        while(j<n){
            sum+=arr[j];
            while(sum>s)
                sum=sum-arr[i++];
            if(sum==s){
                a.add(i+1);
                a.add(j+1);
                break;
            }
            j++;
        }
        if(a.size()==0) a.add(-1);
        return a;
    }
}
