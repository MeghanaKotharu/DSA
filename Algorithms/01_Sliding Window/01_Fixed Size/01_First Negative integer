https://practice.geeksforgeeks.org/problems/first-negative-integer-in-every-window-of-size-k3345/1#

Input : 
N = 5    A[] = {-8, 2, 3, -6, 10}      K = 2

Output : 
-8 0 -6 -6

For every k sized elements give the first encountered negative element.

Approach:
Always remember in a sliding window j-i+1 will give the size of the window.  (j will move first than i).


Solution:   tc:O(n)   sc:O(n)
class Compute {
    
    public long[] printFirstNegativeInteger(long A[], int N, int K)
    {
        int i=0,j=0,k=0;
        long [] a=new long[N-K+1];
        ArrayList<Long> ar=new ArrayList<>();
        while(j<N){
        
            if((j-i+1) < K){    //window size was not reached yet         
                if(A[j]<0)
                   ar.add(A[j]);
                j++;                
            }
            
            else{
                if(A[j]<0) 
                    ar.add(A[j]);
                j++;
                a[k++]=(ar.isEmpty() )?(0):(ar.get(0));
                
                if(A[i]<0 & (!ar.isEmpty())) 
                     ar.remove(0);
                i++;
            }
        }
        return a;
    }
}
